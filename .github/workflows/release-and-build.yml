name: Release and Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci


      - name: Run semantic-release on main branch
        if: github.ref == 'refs/heads/main'
        run: npx semantic-release


      - name: Run semantic-release on tag push
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
        run: npx semantic-release

  build:
    name: Build Main Container
    if: github.ref == 'refs/heads/main'
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Update repository to latest main
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/signalstore-frontend:${{ steps.get_version.outputs.version }} -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/signalstore-frontend:${{ steps.get_version.outputs.version }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/signalstore-backend:latest -f backend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/signalstore-backend:latest
